Absolutely! You can definitely write scripts or small programs in C# that automate tasks like creating files and folders, modifying files, or even managing project scaffoldingâ€”just like your JavaScript script.

### How you can do it in C\#

* Use **System.IO** namespace for file and folder operations:

  * Create directories: `Directory.CreateDirectory(path)`
  * Create/write files: `File.WriteAllText(path, content)`
  * Read files: `File.ReadAllText(path)`
  * Append text, copy, delete files, etc.

* For running external commands (like calling `dotnet` CLI or `nuget` commands):

  * Use `System.Diagnostics.Process` to start and control external processes.

* For more complex automation (e.g., scaffolding projects), you can write **console applications** or **tools**.

---

### Simple example: Create a folder and a file with some content in C\#

```csharp
using System;
using System.IO;

class Program
{
    static void Main()
    {
        string folderPath = @"C:\MyNewProject";
        string filePath = Path.Combine(folderPath, "README.md");
        string fileContent = "# My New Project\nThis project was created by a C# script!";

        Directory.CreateDirectory(folderPath);
        File.WriteAllText(filePath, fileContent);

        Console.WriteLine("Folder and file created successfully!");
    }
}
```

---

### Automate dotnet CLI commands

If you want to automate things like `dotnet new console` or installing NuGet packages programmatically:

```csharp
using System.Diagnostics;

class Program
{
    static void RunCommand(string command, string args)
    {
        var process = new Process();
        process.StartInfo.FileName = command;
        process.StartInfo.Arguments = args;
        process.StartInfo.RedirectStandardOutput = true;
        process.Start();
        string output = process.StandardOutput.ReadToEnd();
        process.WaitForExit();

        Console.WriteLine(output);
    }

    static void Main()
    {
        RunCommand("dotnet", "new console -o MyApp");
        RunCommand("dotnet", "add MyApp package Newtonsoft.Json");
    }
}
```

---

### Summary

* Yes, C# can do file/folder and project automation just like JS scripts.
* You can build powerful CLI tools or scripts with it.
* It's perfect for Windows-based automation but works cross-platform with .NET Core/6+.

Want me to help you build a simple C# scaffolding script?
